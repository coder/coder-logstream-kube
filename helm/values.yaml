# url -- The URL of your Coder deployment. Must prefix with http or https
url: ""

# namespace -- The namespace to searching for Pods within.
# If unspecified, this defaults to the Helm namespace.
namespace: ""

# volumes -- A list of extra volumes to add to the coder-logstream pod.
volumes:
  #   emptyDir: {}
  # - name: "my-volume"

# volumeMounts -- A list of extra volume mounts to add to the coder-logstream pod.
volumeMounts:
  # - name: "my-volume"
  #   mountPath: "/mnt/my-volume"

# image -- The image to use.
image:
  # image.repo -- The repository of the image.
  repo: "ghcr.io/coder/coder-logstream-kube"
  # image.tag -- The tag of the image, defaults to {{.Chart.AppVersion}}
  # if not set. If you're using the chart directly from git, the default
  # app version will not work and you'll need to set this value. The helm
  # chart helpfully fails quickly in this case.
  tag: ""
  # image.pullPolicy -- The pull policy to use for the image. See:
  # https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy
  pullPolicy: IfNotPresent
  # image.pullSecrets -- The secrets used for pulling the Coder image from
  # a private registry.
  pullSecrets: []
  #  - name: "pull-secret"
  # image.sslCertFile -- Location of the SSL certificate file. Sets the $SSL_CERT_FILE
  # variable inside of the container.
  sslCertFile: ""
  # image.sslCertDir -- Directory to check for SSL certificate files. Sets the $SSL_CERT_DIR
  # variable inside of the container.
  sslCertDir: ""

serviceAccount:
  # serviceAccount.annotations -- The service account annotations.
  annotations: {}
  # serviceAccount.labels -- The service account labels.
  labels: {}
  # coder.serviceAccount.name -- The service account name
  name: coder-logstream-kube

# resources -- The resources to request for the Deployment. These are optional
# and are not set by default.
resources:
  {}
  # limits:
  #   cpu: 500m
  #   memory: 500Mi
  # requests:
  #   cpu: 2000m
  #   memory: 2000Mi

# nodeSelector -- Node labels for constraining the coder-logstream pod to specific nodes.
nodeSelector: {}

# affinity -- Allows specifying an affinity rule for the Deployment.
# The default rule prefers to schedule coder pods on different
# nodes, which is only applicable if coder.replicaCount is greater than 1.
affinity:
  {}
  # podAntiAffinity:
  #   preferredDuringSchedulingIgnoredDuringExecution:
  #     - podAffinityTerm:
  #         labelSelector:
  #           matchExpressions:
  #             - key: app.kubernetes.io/instance: coder-logstream-kube
  #               operator: In
  #               values:
  #                 - "true"
  #         topologyKey: kubernetes.io/hostname
  #       weight: 1

# tolerations -- Tolerations for tainted nodes.
# See: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations:
  {}
  # - key: "key"
  #   operator: "Equal"
  #   value: "value"
  #   effect: "NoSchedule"

# labels -- The pod labels for coder-logstream-kube. See:
# https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
labels: {}
